@using Newtonsoft.Json
@{
    ViewBag.Title = "Dashboard";
    var lowStock = ViewBag.LowStock as List<SmartInventory.Models.Inventory>;
    var reorders = ViewBag.Reorders;
    var abc = ViewBag.ABC;
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<h2>Welcome to the Smart Inventory System</h2>
<p>You are logged in as @User.Identity.Name</p>
<div class="row mb-5">
    @if (lowStock != null)
    {
        <div class="col-md-6">
            <h4>Low Stock Items</h4>
            <table class="table">
                <tr>
                    <th>Product</th>
                    <th>Stock</th>
                    <th>Min Level</th>
                </tr>
                @foreach (var item in lowStock)
                {
                    <tr>
                        <td>@item.Product.Name</td>
                        <td>@item.CurrentStock</td>
                        <td>@item.Product.MinStockLevel</td>
                    </tr>
                }
            </table>
        </div>
    }

    @if (reorders != null)
    {
        <div class="col-md-6">
            <h4>Reorder Suggestions</h4>
            <table class="table">
                <tr>
                    <th>Product</th>
                    <th>Stock</th>
                    <th>Reorder Quantity</th>
                </tr>
                @foreach (var item in reorders)
                {
                    <tr>
                        <td>@item.Product</td>
                        <td>@item.CurrentStock</td>
                        <td>@item.ReorderQty</td>
                    </tr>
                }
            </table>
        </div>
    }
    <div class="col-md-12">
        <h4>ABC Classification</h4>
        <div class="card p-3 mb-">
            <canvas id="abcChart" width="400" height="200"></canvas>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {

        const abcData = @Html.Raw(JsonConvert.SerializeObject(ViewBag.ABC ?? new List<object>()));

        const ctx = document.getElementById("abcChart");
        if (!ctx) {
            console.warn("Canvas with id 'abcChart' not found.");
            return;
        }

        if (!abcData || abcData.length === 0) {
            console.warn("ABC data is empty.");
            return;
        }

        const chart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: abcData.map(x => `${x.Name} (${x.category})`),
                datasets: [{
                    label: 'Revenue (Rs.)',
                    data: abcData.map(x => x.Revenue),
                    backgroundColor: abcData.map(x =>
                        x.category === 'A' ? 'rgba(255, 99, 132, 0.7)' :
                            x.category === 'B' ? 'rgba(255, 206, 86, 0.7)' :
                                'rgba(75, 192, 192, 0.7)'
                    ),
                    borderColor: 'rgba(0,0,0,0.1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top'
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Revenue'
                        }
                    },
                    x: {
                        ticks: {
                            autoSkip: false
                        }
                    }
                }
            }
        });

    });
</script>

